FROM {{ base_image }}

ENV PHP_MEMORY_LIMIT=1024mb
ENV PHP_MAX_EXECUTION_TIME=120
ENV PHP_MAX_INPUT_TIME=60
ENV PHP_ERROR_REPORTING="E_ALL & ~E_DEPRECATED & ~E_STRICT"
ENV PHP_DISPLAY_ERRORS=Off
ENV PHP_POST_MAX_SIZE=512M
ENV PHP_UPLOAD_MAX_FILESIZE=512M
ENV PHP_MAX_FILE_UPLOADS=20
ENV PHP_DEFAULT_MIMETYPE=application/json
ENV PHP_SESSION_STRICT_MODE=1
ENV PHP_SESSION_COOKIE_SECURE=1
ENV PHP_EXPOSE_PHP=Off
ENV PHP_DATE_TIMEZONE=UTC

ENV PHP_OPCACHE_ENABLE=1
ENV PHP_OPCACHE_ENABLE_CLI=1
ENV PHP_OPCACHE_MEMORY_CONSUMPTION=512
ENV PHP_OPCACHE_INTERNED_STRINGS_BUFFER=16
ENV PHP_OPCACHE_MAX_ACCELERATED_FILES_AUTO=true
ENV PHP_OPCACHE_MAX_ACCELERATED_FILES=50000
ENV PHP_OPCACHE_REVALIDATE_FREQ=0
ENV PHP_OPCACHE_ENABLE_FILE_OVERRIDE=1
ENV PHP_OPCACHE_FILE_CACHE_ONLY=1

RUN apk add --update autoconf g++ libtool pcre make icu-dev postgresql-dev postgresql-libs libsasl db gmp-dev \
	&& docker-php-ext-install -j$(nproc) mbstring \
	&& docker-php-ext-configure opcache --enable-opcache --enable-opcache-file \
	&& docker-php-ext-install -j$(nproc) opcache intl pdo_pgsql pdo_mysql sockets gmp \
    # --enable-sockets=no --enable-openssl=yes --enable-http2=yes --enable-mysqlnd=no --enable-coroutine-postgresql=no --enable-debug-log=no
    && printf 'yes\nyes\nno\nyes\nno' | pecl install swoole \
#    yaml yaml-dev
#    && echo '' | pecl install yaml \
#    && docker-php-ext-enable yaml \
    && docker-php-ext-enable swoole \
    && echo 'swoole.fast_serialize=On' >> /usr/local/etc/php/conf.d/docker-php-ext-swoole-serialize.ini \
    && apk del \
    		autoconf \
    		bash \
    		binutils \
    		db \
    		expat \
    		file \
    		g++ \
    		gcc \
    		gdbm \
    		gmp \
    		isl \
    		libatomic \
    		libbz2 \
    		libc-dev \
    		libffi \
    		libgcc \
    		libgomp \
    		libldap \
    		libltdl \
    		libmagic \
    		libsasl \
    		libstdc++ \
    		libtool \
    		m4 \
    		make \
    		mpc1 \
    		mpfr3 \
    		musl-dev \
    		perl \
    		pkgconf \
    		pkgconfig \
    		python \
    		re2c \
    		readline \
    		sqlite-libs \
    		zlib-dev \
    	&& rm -rf /tmp/* && rm -rf /var/cache/apk/*

COPY entry.sh /
COPY --from=roquie/smalte:latest-alpine /app/smalte /usr/local/bin/smalte
COPY php.ini.tmpl /usr/local/etc/php/
COPY index.php /app/index.php

EXPOSE 8080
WORKDIR /app


ENTRYPOINT ["/entry.sh"]
